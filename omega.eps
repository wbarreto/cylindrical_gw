%!PS-Adobe-2.0
%%Title: omega.eps
%%Creator: gnuplot 5.0 patchlevel 0
%%CreationDate: Fri Jul 13 23:28:36 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (omega.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 0)
  /Author (wbarreto)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 13 23:28:36 2018)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
546 280 M
63 0 V
6338 0 R
-63 0 V
stroke
462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.5)]
] -46.7 MRshow
1.000 UL
LTb
546 1045 M
63 0 V
6338 0 R
-63 0 V
stroke
462 1045 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
1.000 UL
LTb
546 1810 M
63 0 V
6338 0 R
-63 0 V
stroke
462 1810 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.5)]
] -46.7 MRshow
1.000 UL
LTb
546 2576 M
63 0 V
6338 0 R
-63 0 V
stroke
462 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 3341 M
63 0 V
6338 0 R
-63 0 V
stroke
462 3341 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
546 4106 M
63 0 V
6338 0 R
-63 0 V
stroke
462 4106 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 4871 M
63 0 V
6338 0 R
-63 0 V
stroke
462 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5)]
] -46.7 MRshow
1.000 UL
LTb
546 280 M
0 63 V
0 4528 R
0 -63 V
stroke
546 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1826 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1826 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1.000 UL
LTb
3106 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3106 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
1.000 UL
LTb
4387 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4387 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
1.000 UL
LTb
5667 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5667 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
1.000 UL
LTb
6947 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6947 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 4738 M
("p000000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 4738 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 0 V
29 0 V
34 0 V
37 0 V
41 0 V
44 0 V
47 0 V
50 0 V
53 0 V
55 0 V
57 1 V
58 3 V
60 7 V
60 15 V
61 33 V
62 62 V
61 105 V
60 158 V
60 215 V
59 260 V
56 277 V
55 257 V
53 204 V
50 125 V
47 42 V
45 -35 V
40 -90 V
38 -124 V
33 -136 V
29 -134 V
25 -119 V
21 -100 V
16 -78 V
12 -55 V
7 -33 V
5 -22 V
7 -32 V
12 -54 V
16 -73 V
22 -90 V
28 -102 V
33 -108 V
40 -106 V
46 -94 V
53 -75 V
62 -52 V
71 -31 V
80 -15 V
93 -5 V
105 -1 V
121 0 V
138 0 V
159 0 V
182 0 V
211 0 V
246 0 V
287 0 V
338 -1 V
401 1 V
481 0 V
581 0 V
712 -1 V
273 0 V
% End plot #1
% Begin plot #2
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 4598 M
("p010000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 4598 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 0 V
29 0 V
34 0 V
37 0 V
41 0 V
44 0 V
47 1 V
50 1 V
53 2 V
55 5 V
57 10 V
58 17 V
60 32 V
60 54 V
61 88 V
62 130 V
61 178 V
60 224 V
60 252 V
59 252 V
56 218 V
55 153 V
53 67 V
50 -20 V
47 -93 V
45 -144 V
40 -170 V
38 -174 V
33 -163 V
29 -142 V
25 -119 V
21 -94 V
16 -70 V
12 -49 V
7 -28 V
5 -19 V
7 -27 V
12 -44 V
16 -60 V
22 -70 V
28 -78 V
33 -78 V
40 -73 V
46 -63 V
53 -47 V
62 -31 V
71 -17 V
80 -7 V
93 -3 V
105 0 V
121 0 V
138 0 V
159 1 V
182 0 V
211 0 V
246 0 V
287 0 V
338 1 V
401 0 V
481 0 V
581 0 V
712 0 V
273 0 V
% End plot #2
% Begin plot #3
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 4458 M
("p020000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 4458 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 0 V
29 0 V
34 0 V
37 1 V
41 1 V
44 3 V
47 4 V
50 7 V
53 11 V
55 20 V
57 31 V
58 49 V
60 74 V
60 107 V
61 145 V
62 184 V
61 216 V
60 230 V
60 215 V
59 169 V
56 93 V
55 4 V
53 -83 V
50 -151 V
47 -194 V
45 -210 V
40 -205 V
38 -185 V
33 -159 V
29 -130 V
25 -103 V
21 -79 V
16 -56 V
12 -39 V
7 -22 V
5 -14 V
7 -21 V
12 -34 V
16 -44 V
22 -51 V
28 -55 V
33 -53 V
40 -48 V
46 -38 V
53 -28 V
62 -17 V
71 -8 V
80 -3 V
93 0 V
105 0 V
121 2 V
138 1 V
159 1 V
182 1 V
211 1 V
246 1 V
287 1 V
338 0 V
401 1 V
481 1 V
581 0 V
712 1 V
273 0 V
% End plot #3
% Begin plot #4
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 4318 M
("p030000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 4318 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 0 V
29 1 V
34 1 V
37 2 V
41 4 V
44 7 V
47 12 V
50 18 V
53 28 V
55 41 V
57 60 V
58 85 V
60 114 V
60 146 V
61 176 V
62 197 V
61 198 V
60 171 V
60 112 V
59 28 V
56 -64 V
55 -149 V
53 -209 V
50 -241 V
47 -246 V
45 -231 V
40 -202 V
38 -170 V
33 -137 V
29 -107 V
25 -81 V
21 -60 V
16 -42 V
12 -28 V
7 -16 V
5 -11 V
7 -14 V
12 -24 V
16 -31 V
22 -34 V
28 -36 V
33 -33 V
40 -29 V
46 -22 V
53 -15 V
62 -7 V
71 -3 V
80 1 V
93 3 V
105 2 V
121 3 V
138 3 V
159 3 V
182 3 V
211 2 V
246 3 V
287 2 V
338 2 V
401 2 V
481 1 V
581 2 V
712 1 V
273 0 V
% End plot #4
% Begin plot #5
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 4178 M
("p040000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 4178 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 0 V
29 2 V
34 2 V
37 5 V
41 7 V
44 13 V
47 20 V
50 30 V
53 44 V
55 61 V
57 84 V
58 110 V
60 137 V
60 159 V
61 170 V
62 159 V
61 117 V
60 46 V
60 -46 V
59 -139 V
56 -216 V
55 -265 V
53 -284 V
50 -276 V
47 -249 V
45 -214 V
40 -174 V
38 -138 V
33 -106 V
29 -79 V
25 -58 V
21 -41 V
16 -29 V
12 -18 V
7 -11 V
5 -6 V
7 -10 V
12 -15 V
16 -19 V
22 -21 V
28 -21 V
33 -18 V
40 -15 V
46 -9 V
53 -5 V
62 0 V
71 3 V
80 5 V
93 6 V
105 6 V
121 6 V
138 6 V
159 6 V
182 5 V
211 5 V
246 5 V
287 5 V
338 4 V
401 4 V
481 4 V
581 3 V
712 2 V
273 1 V
% End plot #5
% Begin plot #6
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 4038 M
("p045000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 4038 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 1 V
29 1 V
34 3 V
37 6 V
41 9 V
44 15 V
47 24 V
50 35 V
53 50 V
55 70 V
57 92 V
58 117 V
60 139 V
60 153 V
61 146 V
62 113 V
61 48 V
60 -39 V
60 -133 V
59 -216 V
56 -273 V
55 -297 V
53 -295 V
50 -271 V
47 -234 V
45 -193 V
40 -154 V
38 -117 V
33 -88 V
29 -65 V
25 -46 V
21 -32 V
16 -23 V
12 -14 V
7 -8 V
5 -5 V
7 -7 V
12 -11 V
16 -14 V
22 -15 V
28 -14 V
33 -12 V
40 -9 V
46 -4 V
53 0 V
62 3 V
71 6 V
80 8 V
93 8 V
105 8 V
121 8 V
138 8 V
159 8 V
182 8 V
211 7 V
246 7 V
287 7 V
338 6 V
401 5 V
481 5 V
581 5 V
712 3 V
273 1 V
% End plot #6
% Begin plot #7
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 3898 M
("p041000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 3898 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 0 V
29 2 V
34 2 V
37 5 V
41 8 V
44 13 V
47 21 V
50 31 V
53 45 V
55 64 V
57 86 V
58 111 V
60 138 V
60 159 V
61 166 V
62 151 V
61 105 V
60 30 V
60 -63 V
59 -155 V
56 -229 V
55 -274 V
53 -287 V
50 -276 V
47 -247 V
45 -210 V
40 -171 V
38 -134 V
33 -102 V
29 -76 V
25 -56 V
21 -39 V
16 -28 V
12 -17 V
7 -10 V
5 -7 V
7 -9 V
12 -14 V
16 -18 V
22 -20 V
28 -19 V
33 -17 V
40 -14 V
46 -8 V
53 -4 V
62 1 V
71 4 V
80 5 V
93 6 V
105 7 V
121 6 V
138 6 V
159 7 V
182 5 V
211 6 V
246 5 V
287 5 V
338 5 V
401 4 V
481 4 V
581 3 V
712 3 V
273 1 V
% End plot #7
% Begin plot #8
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 3758 M
("p042000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 3758 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 0 V
29 2 V
34 2 V
37 5 V
41 9 V
44 14 V
47 21 V
50 32 V
53 47 V
55 65 V
57 87 V
58 114 V
60 138 V
60 158 V
61 163 V
62 142 V
61 93 V
60 13 V
60 -81 V
59 -171 V
56 -241 V
55 -281 V
53 -291 V
50 -275 V
47 -245 V
45 -206 V
40 -167 V
38 -130 V
33 -98 V
29 -73 V
25 -54 V
21 -37 V
16 -26 V
12 -17 V
7 -10 V
5 -6 V
7 -8 V
12 -14 V
16 -17 V
22 -18 V
28 -18 V
33 -16 V
40 -12 V
46 -8 V
53 -2 V
62 1 V
71 4 V
80 6 V
93 7 V
105 7 V
121 6 V
138 7 V
159 7 V
182 6 V
211 6 V
246 6 V
287 5 V
338 5 V
401 4 V
481 4 V
581 4 V
712 3 V
273 1 V
% End plot #8
% Begin plot #9
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 3618 M
("p043000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 3618 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 0 V
29 2 V
34 3 V
37 5 V
41 9 V
44 14 V
47 22 V
50 33 V
53 48 V
55 67 V
57 89 V
58 115 V
60 139 V
60 156 V
61 158 V
62 134 V
61 78 V
60 -4 V
60 -98 V
59 -187 V
56 -252 V
55 -288 V
53 -292 V
50 -275 V
47 -242 V
45 -202 V
40 -162 V
38 -126 V
33 -95 V
29 -70 V
25 -51 V
21 -36 V
16 -25 V
12 -16 V
7 -9 V
5 -5 V
7 -9 V
12 -12 V
16 -16 V
22 -17 V
28 -17 V
33 -15 V
40 -11 V
46 -6 V
53 -2 V
62 2 V
71 5 V
80 6 V
93 7 V
105 8 V
121 7 V
138 7 V
159 7 V
182 7 V
211 7 V
246 6 V
287 5 V
338 6 V
401 4 V
481 5 V
581 3 V
712 4 V
273 1 V
% End plot #9
% Begin plot #10
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 3478 M
("p044000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 3478 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 0 V
29 2 V
34 3 V
37 5 V
41 9 V
44 15 V
47 23 V
50 34 V
53 49 V
55 68 V
57 91 V
58 116 V
60 140 V
60 154 V
61 153 V
62 123 V
61 64 V
60 -21 V
60 -116 V
59 -202 V
56 -263 V
55 -293 V
53 -294 V
50 -273 V
47 -238 V
45 -198 V
40 -158 V
38 -121 V
33 -92 V
29 -67 V
25 -49 V
21 -34 V
16 -24 V
12 -15 V
7 -8 V
5 -5 V
7 -8 V
12 -12 V
16 -15 V
22 -16 V
28 -16 V
33 -13 V
40 -10 V
46 -5 V
53 -1 V
62 3 V
71 5 V
80 7 V
93 8 V
105 8 V
121 7 V
138 8 V
159 7 V
182 8 V
211 7 V
246 6 V
287 6 V
338 6 V
401 5 V
481 4 V
581 5 V
712 3 V
273 1 V
% End plot #10
% Begin plot #11
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 3338 M
("p046000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 3338 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 1 V
29 1 V
34 3 V
37 6 V
41 10 V
44 15 V
47 25 V
50 36 V
53 51 V
55 71 V
57 94 V
58 118 V
60 138 V
60 149 V
61 140 V
62 100 V
61 33 V
60 -57 V
60 -150 V
59 -230 V
56 -281 V
55 -301 V
53 -295 V
50 -268 V
47 -230 V
45 -188 V
40 -149 V
38 -113 V
33 -84 V
29 -62 V
25 -44 V
21 -31 V
16 -21 V
12 -13 V
7 -7 V
5 -5 V
7 -7 V
12 -10 V
16 -13 V
22 -14 V
28 -13 V
33 -11 V
40 -7 V
46 -4 V
53 1 V
62 4 V
71 7 V
80 8 V
93 8 V
105 9 V
121 9 V
138 9 V
159 8 V
182 8 V
211 8 V
246 8 V
287 6 V
338 7 V
401 6 V
481 5 V
581 5 V
712 4 V
273 1 V
% End plot #11
% Begin plot #12
stroke
LTb
LCb setrgbcolor
/Helvetica findfont 140 scalefont setfont
6296 3198 M
("p050000.dat") Rshow
1.000 UL
LTb
LCb setrgbcolor
6380 3198 M
399 0 V
548 2576 M
7 0 V
12 0 V
16 0 V
21 0 V
25 1 V
29 1 V
34 4 V
37 6 V
41 11 V
44 18 V
47 26 V
50 40 V
53 56 V
55 75 V
57 97 V
58 118 V
60 131 V
60 129 V
61 102 V
62 46 V
61 -36 V
60 -128 V
60 -213 V
59 -274 V
56 -306 V
55 -307 V
53 -287 V
50 -251 V
47 -209 V
45 -167 V
40 -128 V
38 -96 V
33 -70 V
29 -49 V
25 -35 V
21 -24 V
16 -16 V
12 -11 V
7 -5 V
5 -4 V
7 -5 V
12 -7 V
16 -9 V
22 -10 V
28 -8 V
33 -6 V
40 -3 V
46 0 V
53 5 V
62 7 V
71 9 V
80 10 V
93 11 V
105 11 V
121 11 V
138 11 V
159 11 V
182 10 V
211 10 V
246 9 V
287 9 V
338 8 V
401 8 V
481 7 V
581 6 V
712 5 V
273 2 V
% End plot #12
stroke
2.000 UL
LTb
1.000 UL
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
